@page "/formauditoria"
@page "/formauditoria/{Id}"
@using EcoApp.Shared
@inject HttpClient Http
@using MatBlazor
@inject NavigationManager navigationManager
@using Newtonsoft.Json;
@inject ServicioSingleton singleton


<div class="row alert bg-info">
    <div class="row col-md-1">

    </div>
    <div class="col-md-5">
        <h5> <b>DETALLE AUDITORIA</b></h5>
    </div>
</div>

@if (msgError != null)
{
    <div class="row alert bg-danger">
        <div class="row col-md-1">

        </div>
        <div class="col-md-5">
            <MatThemeProvider>
                <MatIcon Icon="cancel"> </MatIcon>   @msgError
            </MatThemeProvider>
        </div>
    </div>
}



<EditForm Model="@model">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-3">
            <MatTextField @bind-Value="@model.FechaRegistro" Label="Fecha" Style="width:100%" Disabled="true"></MatTextField>
        </div>
        <div class="col-md-1"></div>
        <div class="col-md-3">
            <MatStringField @bind-Value="@model.UsuarioNombre" Label="UsuarioNombre" Style="width:100%" Disabled="true"></MatStringField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-3">
            <MatTextField @bind-Value="@model.Accion" Label="Acción" Style="width:100%" Disabled="true"></MatTextField>
        </div>
        <div class="col-md-1"></div>
        <div class="col-md-3">
            <MatStringField @bind-Value="@model.Tabla" Label="Tabla" Style="width:100%" Disabled="true"></MatStringField>
        </div>
    </div>

    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Mensaje" Label="Mensaje" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Campo1" Label="Campo1" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Campo2" Label="Campo2" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Campo3" Label="Campo3" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Campo4" Label="Campo4" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10">
            <MatTextField @bind-Value="@model.Campo5" Label="Campo5" TextArea="true" Style="width:100%" Disabled="true"></MatTextField>
        </div>
    </div>
    <br />
</EditForm>
<hr />
<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-2">
        <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="arrow_back" Text="Retornar" Size="ButtonSize.Medium" Click="@Retornar">
        </RadzenButton>
    </div>
</div>
@code {

    [Parameter]
    public string Id { get; set; }
    string msgError = null;
    public Auditoria model = new Auditoria();
    Response response = new Response();


    MatTheme theme1 = new MatTheme()
    {
        Primary = "green",
    };
    MatTheme theme3 = new MatTheme()
    {
        Primary = "red",
    };


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }


    protected async Task LoadData()
    {
        if (Id !=null)
        {
            response = await Http.GetFromJsonAsync<Response>($"api/auditoria/GetById/{Id}");
            if (response.IsSuccessful)
            {
                model = JsonConvert.DeserializeObject<Auditoria>(response.Data.ToString());
            }
        }
    }

    public void Retornar()
    {
        navigationManager.NavigateTo($"/indexauditoria");
    }


}

